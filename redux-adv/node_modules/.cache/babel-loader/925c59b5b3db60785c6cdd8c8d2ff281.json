{"ast":null,"code":"var _jsxFileName = \"/Users/jbailz/Desktop/Web Development/React/redux-adv/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport counterReducer from './store/reducers/counter';\nimport resultReducer from './store/reducers/result';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nconst rootReducer = combineReducers({\n  ctr: counterReducer,\n  res: resultReducer\n});\n\nconst logger = store => {\n  return next => {\n    return action => {\n      console.log(\"[middleware] action being dispatched: \", action);\n      const result = next(action);\n      console.log(\"[middleware] current state: \", store.getState());\n      return result;\n    };\n  };\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger)));\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 41\n  }\n})), document.getElementById('root'));\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/jbailz/Desktop/Web Development/React/redux-adv/src/index.js"],"names":["React","ReactDOM","Provider","createStore","combineReducers","applyMiddleware","compose","counterReducer","resultReducer","App","registerServiceWorker","rootReducer","ctr","res","logger","store","next","action","console","log","result","getState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AAEA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AAEA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAChCQ,EAAAA,GAAG,EAAEL,cAD2B;AAEhCM,EAAAA,GAAG,EAAEL;AAF2B,CAAD,CAAnC;;AAKA,MAAMM,MAAM,GAAGC,KAAK,IAAI;AACpB,SAAOC,IAAI,IAAI;AACX,WAAOC,MAAM,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDF,MAAtD;AACA,YAAMG,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CJ,KAAK,CAACM,QAAN,EAA5C;AACA,aAAOD,MAAP;AACH,KALD;AAMH,GAPD;AAQH,CATD;;AAWA,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+ClB,OAAxE;AAEA,MAAMS,KAAK,GAAGZ,WAAW,CAACQ,WAAD,EAAcW,gBAAgB,CAACjB,eAAe,CAACS,MAAD,CAAhB,CAA9B,CAAzB;AAEAb,QAAQ,CAACwB,MAAT,eAAgB,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEV,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAxB,CAAhB,EAA4DW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA5D;AACAjB,qBAAqB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\n\nimport counterReducer from './store/reducers/counter';\nimport resultReducer from './store/reducers/result';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst rootReducer = combineReducers({\n    ctr: counterReducer,\n    res: resultReducer\n});\n\nconst logger = store => {\n    return next => {\n        return action => {\n            console.log(\"[middleware] action being dispatched: \", action);\n            const result = next(action);\n            console.log(\"[middleware] current state: \", store.getState());\n            return result;\n        };\n    };\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger)));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"]},"metadata":{},"sourceType":"module"}