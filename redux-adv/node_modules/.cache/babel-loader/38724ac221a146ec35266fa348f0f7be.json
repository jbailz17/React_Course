{"ast":null,"code":"import * as actionTypes from '../actions';\nconst initialState = {\n  results: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: action.result\n        })\n      };\n\n    case actionTypes.DELETE_RESULT:\n      // const id = 2;\n      // const newArray = [...state.results];\n      // newArray.splice(id, 1)\n      const updatedArray = state.results.filter(result => result.id !== action.resultElId);\n      return { ...state,\n        results: updatedArray\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jbailz/Desktop/Web Development/React/redux-adv/src/store/reducers/result.js"],"names":["actionTypes","initialState","results","reducer","state","action","type","STORE_RESULT","concat","id","Date","value","result","DELETE_RESULT","updatedArray","filter","resultElId"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAAEC,KAAK,GAAGH,YAAV,EAAwBI,MAAxB,KAAoC;AAChD,UAASA,MAAM,CAACC,IAAhB;AACI,SAAKN,WAAW,CAACO,YAAjB;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAiBC,UAAAA,KAAK,EAAEN,MAAM,CAACO;AAA/B,SAArB;AAFN,OAAP;;AAIJ,SAAKZ,WAAW,CAACa,aAAjB;AACI;AACA;AACA;AACA,YAAMC,YAAY,GAAGV,KAAK,CAACF,OAAN,CAAca,MAAd,CAAqBH,MAAM,IAAIA,MAAM,CAACH,EAAP,KAAcJ,MAAM,CAACW,UAApD,CAArB;AACA,aAAO,EACH,GAAGZ,KADA;AAEHF,QAAAA,OAAO,EAAEY;AAFN,OAAP;AAXR;;AAgBA,SAAOV,KAAP;AACH,CAlBD;;AAoBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions';\n\nconst initialState = {\n    results: []\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.STORE_RESULT:\n            return {\n                ...state,\n                results: state.results.concat({id: new Date(), value: action.result})\n            }\n        case actionTypes.DELETE_RESULT:\n            // const id = 2;\n            // const newArray = [...state.results];\n            // newArray.splice(id, 1)\n            const updatedArray = state.results.filter(result => result.id !== action.resultElId);\n            return {\n                ...state,\n                results: updatedArray\n            }\n    }\n    return state;\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}