{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  counter: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INCREMENT:\n      const newState = Object.assign({}, state);\n      newState.counter = state.counter + 1;\n      return newState;\n\n    case actionTypes.DECREMENT:\n      return { ...state,\n        counter: state.counter - 1\n      };\n\n    case actionTypes.ADD:\n      return { ...state,\n        counter: state.counter + action.val\n      };\n\n    case actionTypes.SUBTRACT:\n      return { ...state,\n        counter: state.counter - action.val\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/jbailz/Desktop/Web Development/React/redux-adv/src/store/reducers/counter.js"],"names":["actionTypes","initialState","counter","reducer","state","action","type","INCREMENT","newState","Object","assign","DECREMENT","ADD","val","SUBTRACT"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,MAAMC,OAAO,GAAG,CAAEC,KAAK,GAAGH,YAAV,EAAwBI,MAAxB,KAAoC;AAChD,UAASA,MAAM,CAACC,IAAhB;AACI,SAAKN,WAAW,CAACO,SAAjB;AACI,YAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAlB,CAAjB;AACAI,MAAAA,QAAQ,CAACN,OAAT,GAAmBE,KAAK,CAACF,OAAN,GAAgB,CAAnC;AACA,aAAOM,QAAP;;AACJ,SAAKR,WAAW,CAACW,SAAjB;AACI,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgB;AAFtB,OAAP;;AAIJ,SAAKF,WAAW,CAACY,GAAjB;AACI,aAAO,EACH,GAAGR,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACQ;AAF7B,OAAP;;AAIJ,SAAKb,WAAW,CAACc,QAAjB;AACI,aAAO,EACH,GAAGV,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,GAAgBG,MAAM,CAACQ;AAF7B,OAAP;AAhBR;;AAqBA,SAAOT,KAAP;AACH,CAvBD;;AAyBA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    counter: 0\n};\n\nconst reducer = ( state = initialState, action ) => {\n    switch ( action.type ) {\n        case actionTypes.INCREMENT:\n            const newState = Object.assign({}, state);\n            newState.counter = state.counter + 1;\n            return newState;\n        case actionTypes.DECREMENT:\n            return {\n                ...state,\n                counter: state.counter - 1\n            }\n        case actionTypes.ADD:\n            return {\n                ...state,\n                counter: state.counter + action.val\n            }\n        case actionTypes.SUBTRACT:\n            return {\n                ...state,\n                counter: state.counter - action.val\n            }\n    }\n    return state;\n};\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}