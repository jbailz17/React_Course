{"ast":null,"code":"var _jsxFileName = \"/Users/jbailz/Desktop/Web Development/React/routing/src/containers/Blog/Posts/Posts.js\";\nimport React, { Component } from 'react';\nimport axios from '../../../axios';\nimport { Link } from 'react-router-dom';\nimport './Posts.css';\nimport Post from '../../../components/Post/Post';\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.postSelectedHandler = id => {\n      this.setState({\n        selectedPostId: id\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    axios.get('/posts').then(response => {\n      const posts = response.data.slice(0, 4);\n      const updatedPosts = posts.map(post => {\n        return { ...post,\n          author: 'Max'\n        };\n      });\n      this.setState({\n        posts: updatedPosts\n      }); // console.log( response );\n    }).catch(error => {\n      // console.log(error);\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    let posts = React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Something went wrong.\");\n\n    if (!this.state.error) {\n      posts = this.state.posts.map(post => {\n        return React.createElement(Link, {\n          key: post.id,\n          to: '/post/' + post.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, React.createElement(Post, {\n          title: post.title,\n          author: post.author,\n          clicked: () => this.postSelectedHandler(post.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }));\n      });\n    }\n\n    return React.createElement(\"section\", {\n      className: \"Posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, posts);\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["/Users/jbailz/Desktop/Web Development/React/routing/src/containers/Blog/Posts/Posts.js"],"names":["React","Component","axios","Link","Post","Posts","state","posts","postSelectedHandler","id","setState","selectedPostId","componentDidMount","console","log","props","get","then","response","data","slice","updatedPosts","map","post","author","catch","error","render","textAlign","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,OAAO,aAAP;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;AAEA,MAAMC,KAAN,SAAoBJ,SAApB,CAA8B;AAAA;AAAA;AAAA,SAE1BK,KAF0B,GAElB;AACJC,MAAAA,KAAK,EAAE;AADH,KAFkB;;AAAA,SA2B1BC,mBA3B0B,GA2BHC,EAAD,IAAQ;AAC1B,WAAKC,QAAL,CAAc;AAACC,QAAAA,cAAc,EAAEF;AAAjB,OAAd;AACH,KA7ByB;AAAA;;AAM1BG,EAAAA,iBAAiB,GAAI;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEAb,IAAAA,KAAK,CAACc,GAAN,CAAW,QAAX,EACKC,IADL,CACWC,QAAQ,IAAI;AACf,YAAMX,KAAK,GAAGW,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAd;AACA,YAAMC,YAAY,GAAGd,KAAK,CAACe,GAAN,CAAUC,IAAI,IAAI;AACnC,eAAO,EACH,GAAGA,IADA;AAEHC,UAAAA,MAAM,EAAE;AAFL,SAAP;AAIH,OALoB,CAArB;AAMA,WAAKd,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAEc;AAAR,OAAd,EARe,CASf;AACH,KAXL,EAYKI,KAZL,CAYWC,KAAK,IAAI;AACZ;AACA,WAAKhB,QAAL,CAAc;AAACgB,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH,KAfL;AAgBH;;AAMDC,EAAAA,MAAM,GAAI;AACN,QAAIpB,KAAK,GAAG;AAAG,MAAA,KAAK,EAAE;AAACqB,QAAAA,SAAS,EAAE;AAAZ,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAZ;;AACA,QAAI,CAAC,KAAKtB,KAAL,CAAWoB,KAAhB,EAAuB;AACnBnB,MAAAA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBe,GAAjB,CAAqBC,IAAI,IAAI;AACjC,eACI,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACd,EAAhB;AAAoB,UAAA,EAAE,EAAE,WAAWc,IAAI,CAACd,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AACI,UAAA,KAAK,EAAEc,IAAI,CAACM,KADhB;AAEI,UAAA,MAAM,EAAEN,IAAI,CAACC,MAFjB;AAGI,UAAA,OAAO,EAAE,MAAM,KAAKhB,mBAAL,CAAyBe,IAAI,CAACd,EAA9B,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AASH,OAVO,CAAR;AAWH;;AAED,WACI;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKF,KADL,CADJ;AAKH;;AApDyB;;AAwD9B,eAAeF,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from '../../../axios';\nimport { Link } from 'react-router-dom';\n\nimport './Posts.css';\nimport Post from '../../../components/Post/Post'; \n\nclass Posts extends Component {\n\n    state = {\n        posts: []\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n\n        axios.get( '/posts' )\n            .then( response => {\n                const posts = response.data.slice(0, 4);\n                const updatedPosts = posts.map(post => {\n                    return {\n                        ...post,\n                        author: 'Max'\n                    }\n                });\n                this.setState({posts: updatedPosts});\n                // console.log( response );\n            } )\n            .catch(error => {\n                // console.log(error);\n                this.setState({error: true});\n            });\n    }\n\n    postSelectedHandler = (id) => {\n        this.setState({selectedPostId: id});\n    }\n\n    render () {\n        let posts = <p style={{textAlign: 'center'}}>Something went wrong.</p>\n        if (!this.state.error) {\n            posts = this.state.posts.map(post => {\n                return (\n                    <Link key={post.id} to={'/post/' + post.id}>\n                        <Post\n                            title={post.title} \n                            author={post.author}\n                            clicked={() => this.postSelectedHandler(post.id)}\n                        />\n                    </Link>\n                );\n            })\n        }\n\n        return (\n            <section className=\"Posts\">\n                {posts}\n            </section>\n        );\n    }\n\n}\n\nexport default Posts;"]},"metadata":{},"sourceType":"module"}