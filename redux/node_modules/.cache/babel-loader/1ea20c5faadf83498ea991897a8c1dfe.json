{"ast":null,"code":"import * as actionTypes from '../actions';\nconst initialState = {\n  results: []\n};\n\nconst resultsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.STORE_RESULT:\n      return { ...state,\n        results: state.results.concat({\n          id: new Date(),\n          value: state.ctr.counter\n        })\n      };\n\n    case actionTypes.DELETE_RESULT:\n      const updatedArray = state.results.filter((result, index) => {\n        return result.id !== action.id;\n      });\n      return { ...state,\n        results: updatedArray\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default resultsReducer;","map":{"version":3,"sources":["/Users/jbailz/Desktop/Web Development/React/redux/src/store/reducers/results.js"],"names":["actionTypes","initialState","results","resultsReducer","state","action","type","STORE_RESULT","concat","id","Date","value","ctr","counter","DELETE_RESULT","updatedArray","filter","result","index"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,YAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAW,CAACO,YAAjB;AACI,aAAO,EACH,GAAGH,KADA;AAEHF,QAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcM,MAAd,CAAqB;AAACC,UAAAA,EAAE,EAAE,IAAIC,IAAJ,EAAL;AAAiBC,UAAAA,KAAK,EAAEP,KAAK,CAACQ,GAAN,CAAUC;AAAlC,SAArB;AAFN,OAAP;;AAIJ,SAAKb,WAAW,CAACc,aAAjB;AACI,YAAMC,YAAY,GAAGX,KAAK,CAACF,OAAN,CAAcc,MAAd,CAAqB,CAACC,MAAD,EAASC,KAAT,KAAmB;AACzD,eAAOD,MAAM,CAACR,EAAP,KAAcJ,MAAM,CAACI,EAA5B;AACH,OAFoB,CAArB;AAGA,aAAO,EACH,GAAGL,KADA;AAEHF,QAAAA,OAAO,EAAEa;AAFN,OAAP;;AAIJ;AACI,aAAOX,KAAP;AAfR;AAiBH,CAlBD;;AAoBA,eAAeD,cAAf","sourcesContent":["import * as actionTypes from '../actions';\n\nconst initialState = {\n    results: []\n};\n\nconst resultsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.STORE_RESULT:\n            return {\n                ...state,\n                results: state.results.concat({id: new Date(), value: state.ctr.counter})\n            }\n        case actionTypes.DELETE_RESULT:\n            const updatedArray = state.results.filter((result, index) => {\n                return result.id !== action.id;\n            });\n            return {\n                ...state,\n                results: updatedArray\n            }\n        default:\n            return state;\n    }\n};\n\nexport default resultsReducer;"]},"metadata":{},"sourceType":"module"}